<div class="ui tiny modal" id="modal-task-create">
    <div class="header">Create new task</div>
    <div class="content">

        <div class="ui red message" id="error-text" style="display: none"></div>

        <form class="ui form">
            <div class="field">
                <label>Title</label>
                <input type="text" name="title">
            </div>
            <div class="field">
                <label>Description</label>
                <textarea rows="3" name="description"></textarea>
            </div>
            <div class="field">
                <label>Time range</label>
                <select class="ui fluid dropdown" id="date-type">
                    <option value="day">Day</option>
                    <option value="day_range">Date range</option>
                    <option value="month">Month</option>
                </select>
            </div>

            <div class="field date-type" id="date-type-day">
                <label>Date</label>
                <div class="ui calendar" id="day">
                    <div class="ui input left icon">
                        <i class="calendar icon"></i>
                        <input type="text" placeholder="Start" name="start_day">
                    </div>
                </div>
            </div>

            <div class="two fields date-type" id="date-type-day_range">
                <div class="field">
                    <label>Start date</label>
                    <div class="ui calendar" id="rangestart">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" placeholder="Start" name="start_date">
                        </div>
                    </div>
                </div>
                <div class="field">
                    <label>End date</label>
                    <div class="ui calendar" id="rangeend">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" placeholder="End" name="end_date">
                        </div>
                    </div>
                </div>
            </div>

            <div class="field date-type" id="date-type-month">
                <label>Month</label>
                <div class="ui calendar" id="month">
                    <div class="ui input left icon">
                        <i class="time icon"></i>
                        <input type="text" placeholder="Time" name="start_month">
                    </div>
                </div>
            </div>

        </form>
    </div>
    <div class="actions">
        <div class="ui right labeled icon button close-modal" id="cancel">
            Cancel
            <i class="x icon"></i>
        </div>
        <div class="ui green right labeled icon button" id="submit">
            Add
            <i class="plus icon"></i>
        </div>
    </div>
</div>

<script>

    class TaskEdit {

        constructor() {
            this.lockSubmit = false
            this.init()
            this.updateDateInputs()
        }

        init() {
            $('#date-type').dropdown({
                onChange: this.updateDateInputs
            })
            $('#modal-task-create').modal({
                onShow: this.onModalShow,
            })
            $('#modal-task-create #submit').click(() => {
                this.onSubmit()
            })
        }

        onModalShow() {
            $('#modal-task-create #day').calendar({
                type: 'date'
            })
            $('#modal-task-create #rangestart').calendar({
                type: 'date',
                endCalendar: $('#rangeend')
            })
            $('#modal-task-create #rangeend').calendar({
                type: 'date',
                startCalendar: $('#rangestart')
            })
            $('#modal-task-create #month').calendar({
                type: 'month'
            })
            $('#modal-task-create [name="title"]').val('')
            $('#modal-task-create [name="description"]').val('')
            taskEdit.hideError()
        }

        updateDateInputs() {
            let value = $('#date-type').val()
            $('.date-type').hide()
            $('#date-type-' + value).show()
        }

        onSubmit() {
            if (!this.lockSubmit)
            {
                this.lockSubmit = true
                $('#modal-task-create #submit').addClass('loading')
                let formData = this.getFormSubmitionData()
                this.requestCreateTask(formData)
            }
        }

        requestCreateTask(requestData) {
            this.hideError()
            restApi.post('tasks', requestData)
                .then(response => {
                    this.lockSubmit = false
                    $('#modal-task-create #submit').removeClass('loading')
                    if (response.status === 'ok') {
                        $('#modal-task-create').modal('hide')
                        tasksPage.refreshTasks()
                    } else if (response.status === 'bad') {
                        if (response.errorMessage) {
                            this.showError(response.errorMessage)
                        }
                    }
                })
                .catch(reason => {
                    this.lockSubmit = false
                    $('#modal-task-create #submit').removeClass('loading')
                    this.showError('Undefined error')
                })
        }

        getFormSubmitionData() {
            let title = $('#modal-task-create [name="title"]').val()
            let description = $('#modal-task-create [name="description"]').val()

            let newTaskData = {
                title: title,
                description: description,
                start_date: this.getSelectedStartDate(),
                end_date: this.getSelectedEndDate(),
            }
            return newTaskData
        }

        getSelectedStartDate() {
            let dateType = $('#date-type').val()

            let startDate = null
            if (dateType === 'day') {
                startDate = this.getCalendarValue('start_day')
            } else if (dateType === 'day_range') {
                startDate = this.getCalendarValue('start_date')
            } else if (dateType === 'month') {
                startDate = this.getCalendarValue('start_month')
            }
            return startDate
        }

        getSelectedEndDate() {
            let dateType = $('#date-type').val()

            let endDate = null
            if (dateType === 'day') {
                endDate = this.getCalendarValue('start_day')
            } else if (dateType === 'day_range') {
                endDate = this.getCalendarValue('end_date')
            } else if (dateType === 'month') {
                let startDate = this.getCalendarValue('start_month')
                let lastMonthDayDate = new Date(startDate)
                lastMonthDayDate.setMonth(lastMonthDayDate.getMonth() + 1)
                lastMonthDayDate.setDate(0)
                endDate = this.formatDate(lastMonthDayDate)
            }

            return endDate
        }

        getCalendarValue(calendarId) {
            let inputValue = $('#modal-task-create [name="' + calendarId + '"]').val()
            let date = new Date(inputValue)
            return this.formatDate(date)
        }

        formatDate(date) {
            let year = date.getFullYear()
            let month = (date.getMonth() + 1).toString().padStart(2, '0')
            let day = (date.getDate()).toString().padStart(2, '0')
            return [year, month, day].join('-')
        }

        showError(message) {
            $('#modal-task-create #error-text').text(message).show()
        }

        hideError() {
            $('#modal-task-create #error-text').hide()
        }

    }

    const taskEdit = new TaskEdit();

</script>